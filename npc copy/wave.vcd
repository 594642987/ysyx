$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 Z$ clk $end
  $var wire  1 [$ rst_n $end
  $scope module riscv32 $end
   $var wire  1 Z$ clk $end
   $var wire 32 B! exu_result [31:0] $end
   $var wire  4 9! idu_alu_opt [3:0] $end
   $var wire  1 1! idu_branch $end
   $var wire  3 <! idu_csr_opt [2:0] $end
   $var wire  3 =! idu_funct3 [2:0] $end
   $var wire 32 8! idu_imm [31:0] $end
   $var wire  1 2! idu_jal $end
   $var wire  1 3! idu_jalr $end
   $var wire  2 ;! idu_lsu_opt [1:0] $end
   $var wire  5 4! idu_rd [4:0] $end
   $var wire  1 5! idu_rd_wen $end
   $var wire  5 6! idu_rs1 [4:0] $end
   $var wire  5 7! idu_rs2 [4:0] $end
   $var wire  2 :! idu_src_sel [1:0] $end
   $var wire  1 0! idu_system $end
   $var wire 32 /! ifu_inst [31:0] $end
   $var wire 32 0$ ifu_pc [31:0] $end
   $var wire 32 C! lsu_result [31:0] $end
   $var wire 32 @! rd_data [31:0] $end
   $var wire  1 [$ rst_n $end
   $var wire 32 >! src1 [31:0] $end
   $var wire 32 ?! src2 [31:0] $end
   $var wire  1 A! zero_flag $end
   $scope module riscv_bpu_u0 $end
    $var wire  1 1! branch $end
    $var wire  1 Z$ clk $end
    $var wire 32 8! imm [31:0] $end
    $var wire  1 2! jal $end
    $var wire  1 3! jalr $end
    $var wire 32 D! npc [31:0] $end
    $var wire 32 0$ pc [31:0] $end
    $var wire  1 [$ rst_n $end
    $var wire 32 >! src1 [31:0] $end
    $var wire  1 A! zero_flag $end
    $scope module riscv_dff_pc $end
     $var wire 32 ]$ RESET_VAL [31:0] $end
     $var wire 32 \$ WIDTH [31:0] $end
     $var wire  1 Z$ clk $end
     $var wire 32 D! din [31:0] $end
     $var wire 32 0$ dout [31:0] $end
     $var wire  1 [$ rst_n $end
     $var wire  1 ^$ wen $end
    $upscope $end
   $upscope $end
   $scope module riscv_exu_u0 $end
    $var wire 32 E! alu_a_data [31:0] $end
    $var wire 32 F! alu_b_data [31:0] $end
    $var wire  4 9! alu_opt [3:0] $end
    $var wire 32 G! alu_out_data [31:0] $end
    $var wire  1 1! branch $end
    $var wire  1 _$ carry_flag $end
    $var wire 32 B! exu_result [31:0] $end
    $var wire  3 =! funct3 [2:0] $end
    $var wire 32 8! imm [31:0] $end
    $var wire 32 0$ pc [31:0] $end
    $var wire  1 `$ signed_flag $end
    $var wire 32 >! src1 [31:0] $end
    $var wire 32 ?! src2 [31:0] $end
    $var wire  2 :! src_sel [1:0] $end
    $var wire  1 A! zero_flag $end
    $scope module riscv_ex_alu $end
     $var wire 33 O! add_out [32:0] $end
     $var wire 32 E! alu_a_data [31:0] $end
     $var wire 33 I! alu_a_t [32:0] $end
     $var wire 32 F! alu_b_data [31:0] $end
     $var wire 33 K! alu_b_t [32:0] $end
     $var wire  4 9! alu_opt [3:0] $end
     $var wire 32 G! alu_out_data [31:0] $end
     $var wire  1 V! carry_flag $end
     $var wire 33 M! cin [32:0] $end
     $var wire  1 U! over_flag $end
     $var wire  1 T! sign_flag $end
     $var wire 32 W! sra_result [31:0] $end
     $var wire  1 H! sub_flag $end
     $var wire  1 Q! top_A $end
     $var wire  1 R! top_B $end
     $var wire  1 S! top_C $end
     $scope module riscv_mux_ex_data $end
      $var wire 32 \$ DATA_LEN [31:0] $end
      $var wire 32 b$ KEY_LEN [31:0] $end
      $var wire 32 a$ NR_KEY [31:0] $end
      $var wire 32 c$ default_out [31:0] $end
      $var wire  4 9! key [3:0] $end
      $var wire 396 X! lut [395:0] $end
      $var wire 32 G! out [31:0] $end
      $scope module i1 $end
       $var wire 32 \$ DATA_LEN [31:0] $end
       $var wire 32 d$ HAS_DEFAULT [31:0] $end
       $var wire 32 b$ KEY_LEN [31:0] $end
       $var wire 32 a$ NR_KEY [31:0] $end
       $var wire 32 e$ PAIR_LEN [31:0] $end
       $var wire 32 {! data_list[0] [31:0] $end
       $var wire 32 '" data_list[10] [31:0] $end
       $var wire 32 |! data_list[1] [31:0] $end
       $var wire 32 }! data_list[2] [31:0] $end
       $var wire 32 ~! data_list[3] [31:0] $end
       $var wire 32 !" data_list[4] [31:0] $end
       $var wire 32 "" data_list[5] [31:0] $end
       $var wire 32 #" data_list[6] [31:0] $end
       $var wire 32 $" data_list[7] [31:0] $end
       $var wire 32 %" data_list[8] [31:0] $end
       $var wire 32 &" data_list[9] [31:0] $end
       $var wire 32 c$ default_out [31:0] $end
       $var wire  1 )" hit $end
       $var wire 32 f$ i [31:0] $end
       $var wire  4 9! key [3:0] $end
       $var wire  4 # key_list[0] [3:0] $end
       $var wire  4 - key_list[10] [3:0] $end
       $var wire  4 $ key_list[1] [3:0] $end
       $var wire  4 % key_list[2] [3:0] $end
       $var wire  4 & key_list[3] [3:0] $end
       $var wire  4 ' key_list[4] [3:0] $end
       $var wire  4 ( key_list[5] [3:0] $end
       $var wire  4 ) key_list[6] [3:0] $end
       $var wire  4 * key_list[7] [3:0] $end
       $var wire  4 + key_list[8] [3:0] $end
       $var wire  4 , key_list[9] [3:0] $end
       $var wire 396 X! lut [395:0] $end
       $var wire 32 (" lut_out [31:0] $end
       $var wire 32 G! out [31:0] $end
       $var wire 36 e! pair_list[0] [35:0] $end
       $var wire 36 y! pair_list[10] [35:0] $end
       $var wire 36 g! pair_list[1] [35:0] $end
       $var wire 36 i! pair_list[2] [35:0] $end
       $var wire 36 k! pair_list[3] [35:0] $end
       $var wire 36 m! pair_list[4] [35:0] $end
       $var wire 36 o! pair_list[5] [35:0] $end
       $var wire 36 q! pair_list[6] [35:0] $end
       $var wire 36 s! pair_list[7] [35:0] $end
       $var wire 36 u! pair_list[8] [35:0] $end
       $var wire 36 w! pair_list[9] [35:0] $end
      $upscope $end
     $upscope $end
    $upscope $end
    $scope module riscv_mux_ex_branch $end
     $var wire 32 \$ DATA_LEN [31:0] $end
     $var wire 32 b$ KEY_LEN [31:0] $end
     $var wire 32 g$ NR_KEY [31:0] $end
     $var wire 32 G! default_out [31:0] $end
     $var wire  4 *" key [3:0] $end
     $var wire 216 +" lut [215:0] $end
     $var wire 32 B! out [31:0] $end
     $scope module i1 $end
      $var wire 32 \$ DATA_LEN [31:0] $end
      $var wire 32 d$ HAS_DEFAULT [31:0] $end
      $var wire 32 b$ KEY_LEN [31:0] $end
      $var wire 32 g$ NR_KEY [31:0] $end
      $var wire 32 e$ PAIR_LEN [31:0] $end
      $var wire 32 >" data_list[0] [31:0] $end
      $var wire 32 ?" data_list[1] [31:0] $end
      $var wire 32 @" data_list[2] [31:0] $end
      $var wire 32 A" data_list[3] [31:0] $end
      $var wire 32 B" data_list[4] [31:0] $end
      $var wire 32 C" data_list[5] [31:0] $end
      $var wire 32 G! default_out [31:0] $end
      $var wire  1 E" hit $end
      $var wire 32 h$ i [31:0] $end
      $var wire  4 *" key [3:0] $end
      $var wire  4 . key_list[0] [3:0] $end
      $var wire  4 / key_list[1] [3:0] $end
      $var wire  4 0 key_list[2] [3:0] $end
      $var wire  4 1 key_list[3] [3:0] $end
      $var wire  4 2 key_list[4] [3:0] $end
      $var wire  4 3 key_list[5] [3:0] $end
      $var wire 216 +" lut [215:0] $end
      $var wire 32 D" lut_out [31:0] $end
      $var wire 32 B! out [31:0] $end
      $var wire 36 2" pair_list[0] [35:0] $end
      $var wire 36 4" pair_list[1] [35:0] $end
      $var wire 36 6" pair_list[2] [35:0] $end
      $var wire 36 8" pair_list[3] [35:0] $end
      $var wire 36 :" pair_list[4] [35:0] $end
      $var wire 36 <" pair_list[5] [35:0] $end
     $upscope $end
    $upscope $end
    $scope module riscv_mux_ex_src_sel $end
     $var wire 32 j$ DATA_LEN [31:0] $end
     $var wire 32 i$ KEY_LEN [31:0] $end
     $var wire 32 b$ NR_KEY [31:0] $end
     $var wire 64 k$ default_out [63:0] $end
     $var wire  2 :! key [1:0] $end
     $var wire 264 H" lut [263:0] $end
     $var wire 64 F" out [63:0] $end
     $scope module i1 $end
      $var wire 32 j$ DATA_LEN [31:0] $end
      $var wire 32 d$ HAS_DEFAULT [31:0] $end
      $var wire 32 i$ KEY_LEN [31:0] $end
      $var wire 32 b$ NR_KEY [31:0] $end
      $var wire 32 m$ PAIR_LEN [31:0] $end
      $var wire 64 ]" data_list[0] [63:0] $end
      $var wire 64 _" data_list[1] [63:0] $end
      $var wire 64 a" data_list[2] [63:0] $end
      $var wire 64 c" data_list[3] [63:0] $end
      $var wire 64 k$ default_out [63:0] $end
      $var wire  1 g" hit $end
      $var wire 32 n$ i [31:0] $end
      $var wire  2 :! key [1:0] $end
      $var wire  2 4 key_list[0] [1:0] $end
      $var wire  2 5 key_list[1] [1:0] $end
      $var wire  2 6 key_list[2] [1:0] $end
      $var wire  2 7 key_list[3] [1:0] $end
      $var wire 264 H" lut [263:0] $end
      $var wire 64 e" lut_out [63:0] $end
      $var wire 64 F" out [63:0] $end
      $var wire 66 Q" pair_list[0] [65:0] $end
      $var wire 66 T" pair_list[1] [65:0] $end
      $var wire 66 W" pair_list[2] [65:0] $end
      $var wire 66 Z" pair_list[3] [65:0] $end
     $upscope $end
    $upscope $end
   $upscope $end
   $scope module riscv_gpr_regfile_u0 $end
    $var wire  1 Z$ clk $end
    $var wire 32 1$ gpr[0] [31:0] $end
    $var wire 32 ;$ gpr[10] [31:0] $end
    $var wire 32 <$ gpr[11] [31:0] $end
    $var wire 32 =$ gpr[12] [31:0] $end
    $var wire 32 >$ gpr[13] [31:0] $end
    $var wire 32 ?$ gpr[14] [31:0] $end
    $var wire 32 @$ gpr[15] [31:0] $end
    $var wire 32 A$ gpr[16] [31:0] $end
    $var wire 32 B$ gpr[17] [31:0] $end
    $var wire 32 C$ gpr[18] [31:0] $end
    $var wire 32 D$ gpr[19] [31:0] $end
    $var wire 32 2$ gpr[1] [31:0] $end
    $var wire 32 E$ gpr[20] [31:0] $end
    $var wire 32 F$ gpr[21] [31:0] $end
    $var wire 32 G$ gpr[22] [31:0] $end
    $var wire 32 H$ gpr[23] [31:0] $end
    $var wire 32 I$ gpr[24] [31:0] $end
    $var wire 32 J$ gpr[25] [31:0] $end
    $var wire 32 K$ gpr[26] [31:0] $end
    $var wire 32 L$ gpr[27] [31:0] $end
    $var wire 32 M$ gpr[28] [31:0] $end
    $var wire 32 N$ gpr[29] [31:0] $end
    $var wire 32 3$ gpr[2] [31:0] $end
    $var wire 32 O$ gpr[30] [31:0] $end
    $var wire 32 P$ gpr[31] [31:0] $end
    $var wire 32 4$ gpr[3] [31:0] $end
    $var wire 32 5$ gpr[4] [31:0] $end
    $var wire 32 6$ gpr[5] [31:0] $end
    $var wire 32 7$ gpr[6] [31:0] $end
    $var wire 32 8$ gpr[7] [31:0] $end
    $var wire 32 9$ gpr[8] [31:0] $end
    $var wire 32 :$ gpr[9] [31:0] $end
    $var wire 32 8 i [31:0] $end
    $var wire  5 4! rd_addr [4:0] $end
    $var wire  5 Q$ rd_addr_t [4:0] $end
    $var wire 32 @! rd_data [31:0] $end
    $var wire  1 5! rd_en $end
    $var wire  1 R$ rd_en_t $end
    $var wire  5 6! rs1_addr [4:0] $end
    $var wire 32 >! rs1_data [31:0] $end
    $var wire  5 7! rs2_addr [4:0] $end
    $var wire 32 ?! rs2_data [31:0] $end
    $var wire  1 [$ rst_n $end
    $scope module riscv_dff_reg_t $end
     $var wire 32 c$ RESET_VAL [31:0] $end
     $var wire 32 g$ WIDTH [31:0] $end
     $var wire  1 Z$ clk $end
     $var wire  6 h" din [5:0] $end
     $var wire  6 S$ dout [5:0] $end
     $var wire  1 [$ rst_n $end
     $var wire  1 ^$ wen $end
    $upscope $end
   $upscope $end
   $scope module riscv_idu_u0 $end
    $var wire  4 9! alu_opt [3:0] $end
    $var wire  1 1! branch $end
    $var wire  3 <! csr_opt [2:0] $end
    $var wire  3 =! funct3 [2:0] $end
    $var wire  7 j" funct7 [6:0] $end
    $var wire 32 8! imm [31:0] $end
    $var wire 32 /! inst [31:0] $end
    $var wire  1 2! jal $end
    $var wire  1 3! jalr $end
    $var wire  2 ;! lsu_opt [1:0] $end
    $var wire  7 i" opcode [6:0] $end
    $var wire  5 4! rd [4:0] $end
    $var wire  1 5! rd_wen $end
    $var wire  5 o$ reg_zero [4:0] $end
    $var wire  5 6! rs1 [4:0] $end
    $var wire  5 7! rs2 [4:0] $end
    $var wire  2 :! src_sel [1:0] $end
    $var wire  1 0! system $end
    $scope module riscv_id_imm_idu $end
     $var wire 32 8! imm [31:0] $end
     $var wire 32 n" imm_typeB [31:0] $end
     $var wire 32 k" imm_typeI [31:0] $end
     $var wire 32 o" imm_typeJ [31:0] $end
     $var wire 32 p$ imm_typeR [31:0] $end
     $var wire 32 m" imm_typeS [31:0] $end
     $var wire 32 l" imm_typeU [31:0] $end
     $var wire 32 p$ imm_type_NONE [31:0] $end
     $var wire 32 /! inst [31:0] $end
     $scope module riscv_id_imm_ext_typeB $end
      $var wire 32 q$ INPUT_WIDTH [31:0] $end
      $var wire 13 p" imm_in [12:0] $end
      $var wire 32 n" imm_out [31:0] $end
     $upscope $end
     $scope module riscv_id_imm_ext_typeI $end
      $var wire 32 r$ INPUT_WIDTH [31:0] $end
      $var wire 12 q" imm_in [11:0] $end
      $var wire 32 k" imm_out [31:0] $end
     $upscope $end
     $scope module riscv_id_imm_ext_typeJ $end
      $var wire 32 s$ INPUT_WIDTH [31:0] $end
      $var wire 21 r" imm_in [20:0] $end
      $var wire 32 o" imm_out [31:0] $end
     $upscope $end
     $scope module riscv_id_imm_ext_typeS $end
      $var wire 32 r$ INPUT_WIDTH [31:0] $end
      $var wire 12 s" imm_in [11:0] $end
      $var wire 32 m" imm_out [31:0] $end
     $upscope $end
     $scope module riscv_id_imm_ext_typeU $end
      $var wire 32 \$ INPUT_WIDTH [31:0] $end
      $var wire 32 l" imm_in [31:0] $end
      $var wire 32 l" imm_out [31:0] $end
     $upscope $end
     $scope module riscv_mux_id_imm $end
      $var wire 32 \$ DATA_LEN [31:0] $end
      $var wire 32 t$ KEY_LEN [31:0] $end
      $var wire 32 a$ NR_KEY [31:0] $end
      $var wire 32 c$ default_out [31:0] $end
      $var wire  7 i" key [6:0] $end
      $var wire 429 t" lut [428:0] $end
      $var wire 32 8! out [31:0] $end
      $scope module i1 $end
       $var wire 32 \$ DATA_LEN [31:0] $end
       $var wire 32 d$ HAS_DEFAULT [31:0] $end
       $var wire 32 t$ KEY_LEN [31:0] $end
       $var wire 32 a$ NR_KEY [31:0] $end
       $var wire 32 u$ PAIR_LEN [31:0] $end
       $var wire 32 :# data_list[0] [31:0] $end
       $var wire 32 D# data_list[10] [31:0] $end
       $var wire 32 ;# data_list[1] [31:0] $end
       $var wire 32 <# data_list[2] [31:0] $end
       $var wire 32 =# data_list[3] [31:0] $end
       $var wire 32 ># data_list[4] [31:0] $end
       $var wire 32 ?# data_list[5] [31:0] $end
       $var wire 32 @# data_list[6] [31:0] $end
       $var wire 32 A# data_list[7] [31:0] $end
       $var wire 32 B# data_list[8] [31:0] $end
       $var wire 32 C# data_list[9] [31:0] $end
       $var wire 32 c$ default_out [31:0] $end
       $var wire  1 F# hit $end
       $var wire 32 f$ i [31:0] $end
       $var wire  7 i" key [6:0] $end
       $var wire  7 9 key_list[0] [6:0] $end
       $var wire  7 C key_list[10] [6:0] $end
       $var wire  7 : key_list[1] [6:0] $end
       $var wire  7 ; key_list[2] [6:0] $end
       $var wire  7 < key_list[3] [6:0] $end
       $var wire  7 = key_list[4] [6:0] $end
       $var wire  7 > key_list[5] [6:0] $end
       $var wire  7 ? key_list[6] [6:0] $end
       $var wire  7 @ key_list[7] [6:0] $end
       $var wire  7 A key_list[8] [6:0] $end
       $var wire  7 B key_list[9] [6:0] $end
       $var wire 429 t" lut [428:0] $end
       $var wire 32 E# lut_out [31:0] $end
       $var wire 32 8! out [31:0] $end
       $var wire 39 $# pair_list[0] [38:0] $end
       $var wire 39 8# pair_list[10] [38:0] $end
       $var wire 39 &# pair_list[1] [38:0] $end
       $var wire 39 (# pair_list[2] [38:0] $end
       $var wire 39 *# pair_list[3] [38:0] $end
       $var wire 39 ,# pair_list[4] [38:0] $end
       $var wire 39 .# pair_list[5] [38:0] $end
       $var wire 39 0# pair_list[6] [38:0] $end
       $var wire 39 2# pair_list[7] [38:0] $end
       $var wire 39 4# pair_list[8] [38:0] $end
       $var wire 39 6# pair_list[9] [38:0] $end
      $upscope $end
     $upscope $end
    $upscope $end
    $scope module riscv_id_opt_idu $end
     $var wire  4 9! alu_opt [3:0] $end
     $var wire  3 <! csr_opt [2:0] $end
     $var wire  3 =! funct3 [2:0] $end
     $var wire  7 j" funct7 [6:0] $end
     $var wire  2 ;! lsu_opt [1:0] $end
     $var wire  7 i" opcode [6:0] $end
     $var wire  2 :! src_sel [1:0] $end
     $scope module riscv_mux_id_csr_opt $end
      $var wire 32 i$ DATA_LEN [31:0] $end
      $var wire 32 t$ KEY_LEN [31:0] $end
      $var wire 32 i$ NR_KEY [31:0] $end
      $var wire  2 v$ default_out [1:0] $end
      $var wire  7 i" key [6:0] $end
      $var wire 18 w$ lut [17:0] $end
      $var wire  2 ;! out [1:0] $end
      $scope module i1 $end
       $var wire 32 i$ DATA_LEN [31:0] $end
       $var wire 32 d$ HAS_DEFAULT [31:0] $end
       $var wire 32 t$ KEY_LEN [31:0] $end
       $var wire 32 i$ NR_KEY [31:0] $end
       $var wire 32 x$ PAIR_LEN [31:0] $end
       $var wire  2 H data_list[0] [1:0] $end
       $var wire  2 I data_list[1] [1:0] $end
       $var wire  2 v$ default_out [1:0] $end
       $var wire  1 H# hit $end
       $var wire 32 y$ i [31:0] $end
       $var wire  7 i" key [6:0] $end
       $var wire  7 F key_list[0] [6:0] $end
       $var wire  7 G key_list[1] [6:0] $end
       $var wire 18 w$ lut [17:0] $end
       $var wire  2 G# lut_out [1:0] $end
       $var wire  2 ;! out [1:0] $end
       $var wire  9 D pair_list[0] [8:0] $end
       $var wire  9 E pair_list[1] [8:0] $end
      $upscope $end
     $upscope $end
     $scope module riscv_mux_id_lsu_opt $end
      $var wire 32 i$ DATA_LEN [31:0] $end
      $var wire 32 t$ KEY_LEN [31:0] $end
      $var wire 32 i$ NR_KEY [31:0] $end
      $var wire  2 v$ default_out [1:0] $end
      $var wire  7 i" key [6:0] $end
      $var wire 18 w$ lut [17:0] $end
      $var wire  2 ;! out [1:0] $end
      $scope module i1 $end
       $var wire 32 i$ DATA_LEN [31:0] $end
       $var wire 32 d$ HAS_DEFAULT [31:0] $end
       $var wire 32 t$ KEY_LEN [31:0] $end
       $var wire 32 i$ NR_KEY [31:0] $end
       $var wire 32 x$ PAIR_LEN [31:0] $end
       $var wire  2 N data_list[0] [1:0] $end
       $var wire  2 O data_list[1] [1:0] $end
       $var wire  2 v$ default_out [1:0] $end
       $var wire  1 J# hit $end
       $var wire 32 y$ i [31:0] $end
       $var wire  7 i" key [6:0] $end
       $var wire  7 L key_list[0] [6:0] $end
       $var wire  7 M key_list[1] [6:0] $end
       $var wire 18 w$ lut [17:0] $end
       $var wire  2 I# lut_out [1:0] $end
       $var wire  2 ;! out [1:0] $end
       $var wire  9 J pair_list[0] [8:0] $end
       $var wire  9 K pair_list[1] [8:0] $end
      $upscope $end
     $upscope $end
     $scope module riscv_mux_id_src_sel $end
      $var wire 32 i$ DATA_LEN [31:0] $end
      $var wire 32 t$ KEY_LEN [31:0] $end
      $var wire 32 a$ NR_KEY [31:0] $end
      $var wire  2 z$ default_out [1:0] $end
      $var wire  7 i" key [6:0] $end
      $var wire 99 {$ lut [98:0] $end
      $var wire  2 :! out [1:0] $end
      $scope module i1 $end
       $var wire 32 i$ DATA_LEN [31:0] $end
       $var wire 32 d$ HAS_DEFAULT [31:0] $end
       $var wire 32 t$ KEY_LEN [31:0] $end
       $var wire 32 a$ NR_KEY [31:0] $end
       $var wire 32 x$ PAIR_LEN [31:0] $end
       $var wire  2 f data_list[0] [1:0] $end
       $var wire  2 p data_list[10] [1:0] $end
       $var wire  2 g data_list[1] [1:0] $end
       $var wire  2 h data_list[2] [1:0] $end
       $var wire  2 i data_list[3] [1:0] $end
       $var wire  2 j data_list[4] [1:0] $end
       $var wire  2 k data_list[5] [1:0] $end
       $var wire  2 l data_list[6] [1:0] $end
       $var wire  2 m data_list[7] [1:0] $end
       $var wire  2 n data_list[8] [1:0] $end
       $var wire  2 o data_list[9] [1:0] $end
       $var wire  2 z$ default_out [1:0] $end
       $var wire  1 L# hit $end
       $var wire 32 f$ i [31:0] $end
       $var wire  7 i" key [6:0] $end
       $var wire  7 [ key_list[0] [6:0] $end
       $var wire  7 e key_list[10] [6:0] $end
       $var wire  7 \ key_list[1] [6:0] $end
       $var wire  7 ] key_list[2] [6:0] $end
       $var wire  7 ^ key_list[3] [6:0] $end
       $var wire  7 _ key_list[4] [6:0] $end
       $var wire  7 ` key_list[5] [6:0] $end
       $var wire  7 a key_list[6] [6:0] $end
       $var wire  7 b key_list[7] [6:0] $end
       $var wire  7 c key_list[8] [6:0] $end
       $var wire  7 d key_list[9] [6:0] $end
       $var wire 99 {$ lut [98:0] $end
       $var wire  2 K# lut_out [1:0] $end
       $var wire  2 :! out [1:0] $end
       $var wire  9 P pair_list[0] [8:0] $end
       $var wire  9 Z pair_list[10] [8:0] $end
       $var wire  9 Q pair_list[1] [8:0] $end
       $var wire  9 R pair_list[2] [8:0] $end
       $var wire  9 S pair_list[3] [8:0] $end
       $var wire  9 T pair_list[4] [8:0] $end
       $var wire  9 U pair_list[5] [8:0] $end
       $var wire  9 V pair_list[6] [8:0] $end
       $var wire  9 W pair_list[7] [8:0] $end
       $var wire  9 X pair_list[8] [8:0] $end
       $var wire  9 Y pair_list[9] [8:0] $end
      $upscope $end
     $upscope $end
    $upscope $end
    $scope module riscv_mux_id_reg $end
     $var wire 32 !% DATA_LEN [31:0] $end
     $var wire 32 t$ KEY_LEN [31:0] $end
     $var wire 32 a$ NR_KEY [31:0] $end
     $var wire 16 "% default_out [15:0] $end
     $var wire  7 i" key [6:0] $end
     $var wire 253 N# lut [252:0] $end
     $var wire 16 M# out [15:0] $end
     $scope module i1 $end
      $var wire 32 !% DATA_LEN [31:0] $end
      $var wire 32 d$ HAS_DEFAULT [31:0] $end
      $var wire 32 t$ KEY_LEN [31:0] $end
      $var wire 32 a$ NR_KEY [31:0] $end
      $var wire 32 #% PAIR_LEN [31:0] $end
      $var wire 16 a# data_list[0] [15:0] $end
      $var wire 16 k# data_list[10] [15:0] $end
      $var wire 16 b# data_list[1] [15:0] $end
      $var wire 16 c# data_list[2] [15:0] $end
      $var wire 16 d# data_list[3] [15:0] $end
      $var wire 16 e# data_list[4] [15:0] $end
      $var wire 16 f# data_list[5] [15:0] $end
      $var wire 16 g# data_list[6] [15:0] $end
      $var wire 16 h# data_list[7] [15:0] $end
      $var wire 16 i# data_list[8] [15:0] $end
      $var wire 16 j# data_list[9] [15:0] $end
      $var wire 16 "% default_out [15:0] $end
      $var wire  1 m# hit $end
      $var wire 32 f$ i [31:0] $end
      $var wire  7 i" key [6:0] $end
      $var wire  7 q key_list[0] [6:0] $end
      $var wire  7 { key_list[10] [6:0] $end
      $var wire  7 r key_list[1] [6:0] $end
      $var wire  7 s key_list[2] [6:0] $end
      $var wire  7 t key_list[3] [6:0] $end
      $var wire  7 u key_list[4] [6:0] $end
      $var wire  7 v key_list[5] [6:0] $end
      $var wire  7 w key_list[6] [6:0] $end
      $var wire  7 x key_list[7] [6:0] $end
      $var wire  7 y key_list[8] [6:0] $end
      $var wire  7 z key_list[9] [6:0] $end
      $var wire 253 N# lut [252:0] $end
      $var wire 16 l# lut_out [15:0] $end
      $var wire 16 M# out [15:0] $end
      $var wire 23 V# pair_list[0] [22:0] $end
      $var wire 23 `# pair_list[10] [22:0] $end
      $var wire 23 W# pair_list[1] [22:0] $end
      $var wire 23 X# pair_list[2] [22:0] $end
      $var wire 23 Y# pair_list[3] [22:0] $end
      $var wire 23 Z# pair_list[4] [22:0] $end
      $var wire 23 [# pair_list[5] [22:0] $end
      $var wire 23 \# pair_list[6] [22:0] $end
      $var wire 23 ]# pair_list[7] [22:0] $end
      $var wire 23 ^# pair_list[8] [22:0] $end
      $var wire 23 _# pair_list[9] [22:0] $end
     $upscope $end
    $upscope $end
   $upscope $end
   $scope module riscv_ifu_u0 $end
    $var wire 32 /! inst [31:0] $end
    $var wire 32 0$ pc [31:0] $end
    $var wire  1 [$ rst_n $end
   $upscope $end
   $scope module riscv_lsu_u0 $end
    $var wire  1 Z$ clk $end
    $var wire 32 B! exu_result [31:0] $end
    $var wire  3 =! funct3 [2:0] $end
    $var wire  2 ;! lsu_opt [1:0] $end
    $var wire 32 C! lsu_result [31:0] $end
    $var wire 32 p# mask [31:0] $end
    $var wire 32 B! raddr [31:0] $end
    $var wire 32 o# rdata [31:0] $end
    $var wire  1 n# ren $end
    $var wire  1 [$ rst_n $end
    $var wire 32 ?! src2 [31:0] $end
    $var wire 32 T$ waddr [31:0] $end
    $var wire 32 U$ wdata [31:0] $end
    $var wire 32 V$ wmask [31:0] $end
    $scope module riscv_dff_pc $end
     $var wire 32 c$ RESET_VAL [31:0] $end
     $var wire 32 $% WIDTH [31:0] $end
     $var wire  1 Z$ clk $end
     $var wire 96 q# din [95:0] $end
     $var wire 96 W$ dout [95:0] $end
     $var wire  1 [$ rst_n $end
     $var wire  1 ^$ wen $end
    $upscope $end
    $scope module riscv_mux_ls_lsu_opt $end
     $var wire 32 \$ DATA_LEN [31:0] $end
     $var wire 32 %% KEY_LEN [31:0] $end
     $var wire 32 %% NR_KEY [31:0] $end
     $var wire 32 c$ default_out [31:0] $end
     $var wire  5 t# key [4:0] $end
     $var wire 185 u# lut [184:0] $end
     $var wire 32 C! out [31:0] $end
     $scope module i1 $end
      $var wire 32 \$ DATA_LEN [31:0] $end
      $var wire 32 d$ HAS_DEFAULT [31:0] $end
      $var wire 32 %% KEY_LEN [31:0] $end
      $var wire 32 %% NR_KEY [31:0] $end
      $var wire 32 &% PAIR_LEN [31:0] $end
      $var wire 32 '$ data_list[0] [31:0] $end
      $var wire 32 ($ data_list[1] [31:0] $end
      $var wire 32 )$ data_list[2] [31:0] $end
      $var wire 32 *$ data_list[3] [31:0] $end
      $var wire 32 +$ data_list[4] [31:0] $end
      $var wire 32 c$ default_out [31:0] $end
      $var wire  1 -$ hit $end
      $var wire 32 '% i [31:0] $end
      $var wire  5 t# key [4:0] $end
      $var wire  5 | key_list[0] [4:0] $end
      $var wire  5 } key_list[1] [4:0] $end
      $var wire  5 ~ key_list[2] [4:0] $end
      $var wire  5 !! key_list[3] [4:0] $end
      $var wire  5 "! key_list[4] [4:0] $end
      $var wire 185 u# lut [184:0] $end
      $var wire 32 ,$ lut_out [31:0] $end
      $var wire 32 C! out [31:0] $end
      $var wire 37 {# pair_list[0] [36:0] $end
      $var wire 37 }# pair_list[1] [36:0] $end
      $var wire 37 !$ pair_list[2] [36:0] $end
      $var wire 37 #$ pair_list[3] [36:0] $end
      $var wire 37 %$ pair_list[4] [36:0] $end
     $upscope $end
    $upscope $end
    $scope module riscv_mux_ls_wmask $end
     $var wire 32 \$ DATA_LEN [31:0] $end
     $var wire 32 %% KEY_LEN [31:0] $end
     $var wire 32 (% NR_KEY [31:0] $end
     $var wire 32 c$ default_out [31:0] $end
     $var wire  5 t# key [4:0] $end
     $var wire 111 )% lut [110:0] $end
     $var wire 32 p# out [31:0] $end
     $scope module i1 $end
      $var wire 32 \$ DATA_LEN [31:0] $end
      $var wire 32 d$ HAS_DEFAULT [31:0] $end
      $var wire 32 %% KEY_LEN [31:0] $end
      $var wire 32 (% NR_KEY [31:0] $end
      $var wire 32 &% PAIR_LEN [31:0] $end
      $var wire 32 ,! data_list[0] [31:0] $end
      $var wire 32 -! data_list[1] [31:0] $end
      $var wire 32 .! data_list[2] [31:0] $end
      $var wire 32 c$ default_out [31:0] $end
      $var wire  1 /$ hit $end
      $var wire 32 -% i [31:0] $end
      $var wire  5 t# key [4:0] $end
      $var wire  5 )! key_list[0] [4:0] $end
      $var wire  5 *! key_list[1] [4:0] $end
      $var wire  5 +! key_list[2] [4:0] $end
      $var wire 111 )% lut [110:0] $end
      $var wire 32 .$ lut_out [31:0] $end
      $var wire 32 p# out [31:0] $end
      $var wire 37 #! pair_list[0] [36:0] $end
      $var wire 37 %! pair_list[1] [36:0] $end
      $var wire 37 '! pair_list[2] [36:0] $end
     $upscope $end
    $upscope $end
   $upscope $end
   $scope module riscv_wbu_u0 $end
    $var wire 32 B! exu_result [31:0] $end
    $var wire  2 ;! lsu_opt [1:0] $end
    $var wire 32 C! lsu_result [31:0] $end
    $var wire 32 @! wbu_result [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


